`Links` <br>
[Ultimate Python Cheat Sheet: Practical Python For Everyday Tasks](https://medium.com/@roelljr/ultimate-python-cheat-sheet-practical-python-for-everyday-tasks-c267c1394ee8) <br>
[Good one_file-locations-and-paths](https://realpython.com/lessons/file-locations-and-paths/)<br>
https://realpython.com/lessons/python-file-paths/ <br>
https://realpython.com/courses/pathlib-python/ <br>
https://realpython.com/read-write-files-python/ <br>
https://learning.oreilly.com/library/view/automate-the-boring/9781098122584/xhtml/ch09.xhtml <br>


# Python File Paths
The `sys.path.append("../")` statement in Python adds the parent directory of the current directory to the `sys.path` variable. The `sys.path` variable is a list of directories that Python searches for modules when importing them. By adding the parent directory to the `sys.path` variable, you can import modules that are located in the parent directory of the current directory.

For example, suppose you have a module called `my_module.py` located in the directory `/home/user/my_project`. If you are currently in the directory `/home/user`, you can import the `my_module` module by using the following code:

```python
import sys

sys.path.append("../") # Add the parent directory of the current directory to the sys.path variable

import my_module
```

This code will add the directory `/home/user` to the `sys.path` variable. When Python tries to import the `my_module` module, it will first look for the module in the directory `/home/user`. If the module is not found in `/home/user`, Python will then look for the module in the directories that are listed in the `sys.path` variable. Since the parent directory of the current directory is now listed in the `sys.path` variable, Python will find the `my_module` module in the directory `/home/user/my_project` and import it.

The `sys.path.append("../")` statement is often used when developing Python packages. A Python package is a collection of Python modules that are organized into a directory structure. The `sys.path.append("../")` statement can be used to add the directory that contains the Python package to the `sys.path` variable, so that Python can import the modules that are contained in the package. 