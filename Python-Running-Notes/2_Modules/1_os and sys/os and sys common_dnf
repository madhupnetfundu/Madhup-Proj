#### a script which prints script, arguments and script path:

```python
# PythonCode.py executed with ‘python PythonCode.py arg1 arg2 ‘
import sys
import os

# Accessing command-line arguments using sys.argv
script_name = sys.argv[0]
arguments = sys.argv[1:]

# Getting the absolute path of the script using os.path
script_path = os.path.abspath(script_name)

print("Script Name:", script_name)
print("Arguments:", arguments)
print("Script Path:", script_path)
```


#### Returning path
    
```python
import os
import sys


# Getting current working directory using os.getcwd()
current_directory = os.getcwd()

# Creating a new directory using os.mkdir()
new_directory1 = os.path.join(current_directory, 'new_folder')
os.mkdir(new_directory1)

# Checking Python path using sys.executable
python_path = sys.executable

print("Current Directory:", current_directory)
print("New Directory Path:", new_directory1)
print("Python Path:", python_path)
```


#### Environment Variables and Command Line Arguments
    
```python
import os
import sys

# Getting value of an environment variable using os.environ.get()
python_path = os.environ.get('PYTHONPATH', 'Not found')

# Setting a new environment variable using os.environ
os.environ['NEW_VAR'] = 'new_value'

# Accessing command-line arguments using sys.argv
script_name = sys.argv[0]
arguments = sys.argv[1:]


print("Python Path:", python_path)
print("Script Name:", script_name)
print("Arguments:", arguments)
print("New Environment Variable:", os.environ['NEW_VAR'])
```


#### Read from stdin in Python
```python
import sys 
for line in sys.stdin: 
	if 'q' == line.rstrip(): 
		break
	print(f'Input : {line}') 

print("Exit") 
```

#### Python sys.stdout Method
```python
import sys
sys.stdout.write('Geeks')
```

#### stderr function in Python
```python
import sys 
def print_to_stderr(*a): 
	print(*a, file = sys.stderr) 

print_to_stderr("Hello World") 
```


### Command Line Arguments
```python
import sys
n = len(sys.argv)
print("Total arguments passed:", n)
print("\nName of Python script:", sys.argv[0])
print("\nArguments passed:", end = " ")
for i in range(1, n):
	print(sys.argv[i], end = " ")
Sum = 0
for i in range(1, n):
	Sum += int(sys.argv[i])
	
print("\n\nResult:", Sum)
```


### Exiting the Program
`sys.exit([arg])` can be used to exit the program. The optional argument arg can be an integer giving the exit or another type of object. If it is an integer, zero is considered “successful termination”.

Note: A string can also be passed to the sys.exit() method.

```python
import sys 
age = 17
if age < 18: 
	sys.exit("Age less than 18")	 
else: 
	print("Age is not less than 18") 
```