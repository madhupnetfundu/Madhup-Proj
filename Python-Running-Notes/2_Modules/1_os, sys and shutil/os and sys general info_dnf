# OS:
#### Getting the Current working directory
```python
import os 
cwd = os.getcwd() 
print("Current working directory:", cwd) 
```

#### Changing the Current working directory
```python
import os 
def current_path(): 
	print("Current working directory before") 
	print(os.getcwd()) 
	print() 
current_path() 
os.chdir('../') 
current_path() 
```

#### Creating a Directory
There are different methods available in the OS module for creating a directory. These are â€“

os.mkdir()
os.makedirs()

```python
## Using os.mkdir()
import os
directory = "GeeksforGeeks"
parent_dir = "D:/Pycharm projects/"
path = os.path.join(parent_dir, directory)

os.mkdir(path)
print("Directory '% s' created" % directory)
directory = "Geeks"
parent_dir = "D:/Pycharm projects"
mode = 0o666
path = os.path.join(parent_dir, directory)
os.mkdir(path, mode)
print("Directory '% s' created" % directory)
```

```python
# os.makedirs() method in Python is used to create a directory recursively. That means while making leaf directory if any intermediate-level directory is missing, os.makedirs() method will create them all.

import os
directory = "Nikhil"
parent_dir = "D:/Pycharm projects/GeeksForGeeks/Authors"
path = os.path.join(parent_dir, directory)
os.makedirs(path)
print("Directory '% s' created" % directory)
directory = "c"
parent_dir = "D:/Pycharm projects/GeeksforGeeks/a/b"
mode = 0o666
path = os.path.join(parent_dir, directory)
os.makedirs(path, mode)
print("Directory '% s' created" % directory)
```

#### Listing out Files and Directories with Python
```python
import os 
path = "/"
dir_list = os.listdir(path) 
print("Files and directories in '", path, "' :") 
print(dir_list) 
```

#### Deleting Directory or Files using Python

Using os.remove()
```python
import os 
file = 'file1.txt'
location = "D:/Pycharm projects/GeeksforGeeks/Authors/Nikhil/"
path = os.path.join(location, file) 
os.remove(path) 
```

Using os.rmdir()
```python
import os 
directory = "Geeks"
parent = "D:/Pycharm projects/"
path = os.path.join(parent, directory) 
os.rmdir(path) 
```

