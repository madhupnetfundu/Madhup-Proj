## Links 
https://realpython.com/courses/mastering-time-module/  <br>
https://realpython.com/courses/python-datetime-module/ <br> 
https://realpython.com/python-time-module/ <br>
[How to Get the Current Time in Python](https://realpython.com/courses/python-get-current-time/) <br>
[Profiling in Python: How to Find Performance Bottlenecks](https://realpython.com/python-profiling/) <br>
[Python Timer Functions: Three Ways to Monitor Your Code](https://realpython.com/python-timer/) <br>
[Mastering Time with the datetime Module in Python](https://medium.com/@ernestasena/mastering-time-with-the-datetime-module-in-python-dcd81e2d4bc1) <br>
[Working with Datetime in Python: A Beginnerâ€™s Guide](https://singhaldhruv.medium.com/working-with-datetime-in-python-a-beginners-guide-dd54886d8c25) <br>
[Python sleep(): How to Add Time Delays to Your Code](https://realpython.com/python-sleep/) <br>


Good one :
https://pynative.com/python-get-time-difference/

In Python, date and time can be managed using the `datetime` module, which provides classes for working with dates and times.

Here are some examples of how to manage date and time in Python:

1. Get the current date and time:
```python
import datetime

now = datetime.datetime.now()
print("Current date and time:", now)
```

2. Create a `datetime` object from a string:
```python
import datetime

date_string = "2022-05-15 10:30:00"
date_obj = datetime.datetime.strptime(date_string, "%Y-%m-%d %H:%M:%S")
print(date_obj)
```

3. Create a `datetime` object using individual date and time components:
```python
import datetime

dt_obj = datetime.datetime(2022, 5, 15, 10, 30, 0)
print(dt_obj)
```

4. Format a `datetime` object as a string:
```python
import datetime

now = datetime.datetime.now()
formatted_date = now.strftime("%Y-%m-%d %H:%M:%S")
print(formatted_date)
```

5. Perform arithmetic operations on `datetime` objects:
```python
import datetime

now = datetime.datetime.now()
future_date = now + datetime.timedelta(days=7)
print(future_date)
```

6. Convert a `datetime` object to a Unix timestamp:
```python
import datetime

dt_obj = datetime.datetime(2022, 5, 15, 10, 30, 0)
timestamp = dt_obj.timestamp()
print(timestamp)
```

These are just a few examples of what can be done with the `datetime` module in Python.