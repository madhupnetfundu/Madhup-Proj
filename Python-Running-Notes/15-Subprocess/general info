## Links 
https://realpython.com/python-subprocess/


In Python, `subprocess` is a module used to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. It allows you to run other programs or commands from within your Python code. Here are some examples of how `subprocess` can be used:

1. Run a command and get the output:
```
import subprocess

output = subprocess.check_output(["ls", "-l"])
print(output)
```

2. Run a command and get the exit code:
```
import subprocess

try:
    subprocess.check_call(["ls", "-l"])
except subprocess.CalledProcessError as e:
    print("Command failed with return code", e.returncode)
```

3. Run a command and redirect the output to a file:
```
import subprocess

with open("output.txt", "w") as f:
    subprocess.call(["ls", "-l"], stdout=f)
```

4. Run a command with input:
```
import subprocess

with open("input.txt", "w") as f:
    f.write("hello")

subprocess.check_call(["cat"], stdin=open("input.txt", "r"))
```

These are just a few examples of what you can do with `subprocess`. It is a powerful module that can be used for a wide range of tasks, from simple shell commands to more complex tasks like running other programs with specific arguments and environment variables.